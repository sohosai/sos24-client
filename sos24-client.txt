sos24-client 開発の手引
#jsys24 #sos #sos24

code: .env
・NEXT_PUBLIC_FIREBASE_API_KEY="AIzaSyCSv4uZ8jipdGwagzp7fzejucbHjEp8Hrw"
・NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN="sos24-dev.firebaseapp.com"
・NEXT_PUBLIC_FIREBASE_PROJECT_ID="sos24-dev"
・NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET="sos24-dev.appspot.com"
・NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID="592763755647"
・NEXT_PUBLIC_FIREBASE_APP_ID="1:592763755647:web:d7f0831540b85e5da4334a"
・
・NEXT_PUBLIC_API_ENDPOINT="https://8bdc946b-3ac9-41bb-bac4-45a24f7978dd.mock.pstmn.io"

・Firebaseの設定
  ・jsys@でFirebaseにログイン
  ・プロジェクトsos24-devを使用する
・Postmanの設定
  ・https://www.postman.com/ を開く
  ・jsys@でログイン



・APIからのresponseにスキーマに応じた型を付ける方法(SWRを使ってGETするとき編)
  ・例:
  ・code: news.ts
    ・import { assignType } from "@/lib/openapi";
        ・
    ・const newsId = "<uuid>"
    ・
    ・const { data: newsRes, error: newsErr } = useSWR(/news/${newsId}, fetcherWithToken);
    ・const news = newsRes ? assignType("/news/{news_id}", newsRes) : undefined;
  ・fetcherWtihTokenのdataはResponse.json()返ってくるようになっている
    ・path parametersはurlに文字列として直接埋め込む
  ・assignTypeには、openapiで定義されているパスとResponse.jsonを渡す

・APIを安全に叩く方法(post、putなど)
  ・#あとで書く
  ・openapi-fetchを使う
