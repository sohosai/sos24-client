/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


/** OneOf type helpers */
type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;
type OneOf<T extends any[]> = T extends [infer Only] ? Only : T extends [infer A, infer B, ...infer Rest] ? OneOf<[XOR<A, B>, ...Rest]> : never;

export interface paths {
  "/files": {
    /** ファイル一覧の取得 */
    get: operations["getFiles"];
    /** ファイルの作成 */
    post: operations["postFiles"];
  };
  "/files/export": {
    /** ファイル一覧のエクスポート */
    get: operations["getFilesExport"];
  };
  "/files/{file_id}": {
    /** 特定のIDのファイルの取得 */
    get: operations["getFileById"];
    /** 特定のIDのファイルの削除 */
    delete: operations["deleteFileById"];
  };
  "/form-answers": {
    /** 申請回答一覧を取得 */
    get: operations["getFormAnswers"];
    /** 申請回答を作成 */
    post: operations["postFormAnswer"];
  };
  "/form-answers/export": {
    /** 申請回答一覧のエクスポート */
    get: operations["getFormAnswersExport"];
  };
  "/form-answers/{form_answer_id}": {
    /** 特定のIDの申請回答を取得 */
    get: operations["getFormAnswerById"];
    /** 特定のIDの申請回答を更新 */
    put: operations["putFormAnswerById"];
  };
  "/forms": {
    /** 申請一覧の取得 */
    get: operations["getForms"];
    /** 申請の作成 */
    post: operations["postForm"];
  };
  "/forms/{form_id}": {
    /** 特定のIDの申請を取得 */
    get: operations["getFormById"];
    /** 特定のIDの申請を更新 */
    put: operations["putFormById"];
    /** 特定のIDの申請を削除 */
    delete: operations["deleteFormById"];
  };
  "/health": {
    /** サーバーの状態を確認する */
    get: operations["getHealth"];
  };
  "/invitations": {
    /** 招待一覧の取得 */
    get: operations["getInvitations"];
    /** 招待の作成 */
    post: operations["postInvitation"];
  };
  "/invitations/{invitation_id}": {
    /** 特定のIDの招待の取得 */
    get: operations["getInvitationById"];
    /** 特定のIDの招待の受諾 */
    post: operations["postInvitationById"];
    /** 特定のIDの招待の削除 */
    delete: operations["deleteInvitationById"];
  };
  "/news": {
    /** お知らせ一覧の取得 */
    get: operations["getNews"];
    /** お知らせの作成 */
    post: operations["postNews"];
  };
  "/news/{news_id}": {
    /** 特定のIDのお知らせの取得 */
    get: operations["getNewsById"];
    /** 特定のIDのお知らせを更新 */
    put: operations["putNewsById"];
    /** 特定のIDのお知らせの削除 */
    delete: operations["deleteNewsById"];
  };
  "/project-application-period": {
    /** 企画募集期間を取得する */
    get: operations["getProjectApplicationPeriod"];
  };
  "/projects": {
    /** 企画一覧の取得 */
    get: operations["getProjects"];
    /** 企画の作成 */
    post: operations["postProject"];
  };
  "/projects/export": {
    /** 企画一覧のエクスポート */
    get: operations["getProjectsExport"];
  };
  "/projects/me": {
    /** 自分が企画責任者・副企画責任者になっている企画の取得 */
    get: operations["getMyProject"];
  };
  "/projects/{project_id}": {
    /** 特定のIDの企画の取得 */
    get: operations["getProjectById"];
    /** 特定のIDの企画を更新 */
    put: operations["putProjectById"];
    /** 特定のIDの企画の削除 */
    delete: operations["deleteProjectById"];
  };
  "/users": {
    /** ユーザー一覧の取得 */
    get: operations["getUsers"];
    /** ユーザーの作成 */
    post: operations["postUser"];
  };
  "/users/export": {
    /** ユーザー一覧のエクスポート */
    get: operations["getUsersExport"];
  };
  "/users/me": {
    /** 自分のユーザーの取得 */
    get: operations["getMyUser"];
  };
  "/users/{user_id}": {
    /** 特定のIDのユーザーの取得 */
    get: operations["getUserById"];
    /** 特定のIDのユーザーの更新 */
    put: operations["putUserById"];
    /** 特定のIDのユーザーの削除 */
    delete: operations["deleteUserById"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    CreateForm: {
      attachments: string[];
      attributes: components["schemas"]["ProjectAttributes"];
      categories: components["schemas"]["ProjectCategories"];
      description: string;
      /** Format: date-time */
      ends_at: string;
      items: components["schemas"]["NewFormItem"][];
      /** Format: date-time */
      starts_at: string;
      title: string;
    };
    CreateFormAnswer: {
      /** Format: uuid */
      form_id: string;
      items: components["schemas"]["FormAnswerItem"][];
    };
    CreateInvitation: {
      position: components["schemas"]["InvitationPosition"];
      /** Format: uuid */
      project_id: string;
    };
    CreateNews: {
      attachments: string[];
      attributes: components["schemas"]["ProjectAttributes"];
      body: string;
      categories: components["schemas"]["ProjectCategories"];
      title: string;
    };
    CreateProject: {
      attributes: components["schemas"]["ProjectAttributes"];
      category: components["schemas"]["ProjectCategory"];
      group_name: string;
      kana_group_name: string;
      kana_title: string;
      title: string;
    };
    CreateUser: {
      email: string;
      kana_name: string;
      name: string;
      /** Format: password */
      password: string;
      phone_number: string;
    };
    CreatedFile: {
      ids: string[];
    };
    CreatedForm: {
      /** Format: uuid */
      id: string;
    };
    CreatedFormAnswer: {
      /** Format: uuid */
      id: string;
    };
    CreatedInvitation: {
      /** Format: uuid */
      id: string;
    };
    CreatedNews: {
      /** Format: uuid */
      id: string;
    };
    CreatedProject: {
      /** Format: uuid */
      id: string;
    };
    CreatedUser: {
      id: string;
    };
    ErrorResponse: {
      code: string;
      message: string;
    };
    File: {
      /** Format: date-time */
      created_at: string;
      /** Format: uuid */
      id: string;
      name: string;
      /** Format: uuid */
      owner?: string | null;
      /** Format: date-time */
      updated_at: string;
      /** Format: uri */
      url: string;
    };
    FileInfo: {
      /** Format: date-time */
      created_at: string;
      filename: string;
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      owner?: string | null;
      /** Format: date-time */
      updated_at: string;
    };
    Form: {
      /** Format: uuid */
      answer_id?: string | null;
      /** Format: date-time */
      answered_at?: string | null;
      attachments: string[];
      attributes: components["schemas"]["ProjectAttributes"];
      categories: components["schemas"]["ProjectCategories"];
      /** Format: date-time */
      created_at: string;
      description: string;
      /** Format: date-time */
      ends_at: string;
      /** Format: uuid */
      id: string;
      items: components["schemas"]["FormItem"][];
      /** Format: date-time */
      starts_at: string;
      title: string;
      /** Format: date-time */
      updated_at: string;
    };
    FormAnswer: {
      /** Format: date-time */
      created_at: string;
      /** Format: uuid */
      form_id: string;
      form_title: string;
      /** Format: uuid */
      id: string;
      items: components["schemas"]["FormAnswerItem"][];
      /** Format: uuid */
      project_id: string;
      project_title: string;
      /** Format: date-time */
      updated_at: string;
    };
    FormAnswerItem: OneOf<[{
      /** Format: uuid */
      item_id: string;
      /** @enum {string} */
      type: "string";
      value: string;
    }, {
      /** Format: uuid */
      item_id: string;
      /** @enum {string} */
      type: "int";
      /** Format: int32 */
      value: number;
    }, {
      /** Format: uuid */
      item_id: string;
      /** @enum {string} */
      type: "choose_one";
      value: string;
    }, {
      /** Format: uuid */
      item_id: string;
      /** @enum {string} */
      type: "choose_many";
      value: string[];
    }, {
      /** Format: uuid */
      item_id: string;
      /** @enum {string} */
      type: "file";
      value: string[];
    }]>;
    FormAnswerSummary: {
      /** Format: date-time */
      created_at: string;
      /** Format: uuid */
      form_id: string;
      form_title: string;
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      project_id: string;
      project_title: string;
      /** Format: date-time */
      updated_at: string;
    };
    FormItem: components["schemas"]["FormItemKind"] & ({
      description?: string | null;
      /** Format: uuid */
      id: string;
      name: string;
      required: boolean;
    });
    FormItemKind: OneOf<[{
      allow_newline: boolean;
      /** Format: int32 */
      max_length?: number | null;
      /** Format: int32 */
      min_length?: number | null;
      /** @enum {string} */
      type: "string";
    }, {
      /** Format: int32 */
      max?: number | null;
      /** Format: int32 */
      min?: number | null;
      /** @enum {string} */
      type: "int";
    }, {
      options: string[];
      /** @enum {string} */
      type: "choose_one";
    }, {
      /** Format: int32 */
      max_selection?: number | null;
      /** Format: int32 */
      min_selection?: number | null;
      options: string[];
      /** @enum {string} */
      type: "choose_many";
    }, {
      extensions?: string[] | null;
      /** Format: int32 */
      limit?: number | null;
      /** @enum {string} */
      type: "file";
    }]>;
    FormSummary: {
      /** Format: uuid */
      answer_id?: string | null;
      /** Format: date-time */
      answered_at?: string | null;
      attributes: components["schemas"]["ProjectAttributes"];
      categories: components["schemas"]["ProjectCategories"];
      description: string;
      /** Format: date-time */
      ends_at: string;
      /** Format: uuid */
      id: string;
      /** Format: date-time */
      starts_at: string;
      title: string;
      /** Format: date-time */
      updated_at: string;
    };
    Invitation: {
      /** Format: date-time */
      created_at: string;
      /** Format: uuid */
      id: string;
      inviter: string;
      inviter_name: string;
      position: components["schemas"]["InvitationPosition"];
      /** Format: uuid */
      project_id: string;
      project_title: string;
      /** Format: date-time */
      updated_at: string;
      used_by?: string | null;
    };
    /** @enum {string} */
    InvitationPosition: "owner" | "sub_owner";
    NewFormItem: components["schemas"]["FormItemKind"] & ({
      description?: string | null;
      name: string;
      required: boolean;
    });
    News: {
      attachments: string[];
      attributes: components["schemas"]["ProjectAttributes"];
      body: string;
      categories: components["schemas"]["ProjectCategories"];
      /** Format: date-time */
      created_at: string;
      /** Format: uuid */
      id: string;
      title: string;
      /** Format: date-time */
      updated_at: string;
    };
    NewsSummary: {
      attributes: components["schemas"]["ProjectAttributes"];
      categories: components["schemas"]["ProjectCategories"];
      /** Format: uuid */
      id: string;
      title: string;
      /** Format: date-time */
      updated_at: string;
    };
    Project: {
      attributes: components["schemas"]["ProjectAttributes"];
      category: components["schemas"]["ProjectCategory"];
      /** Format: date-time */
      created_at: string;
      group_name: string;
      /** Format: uuid */
      id: string;
      /** Format: int32 */
      index: number;
      kana_group_name: string;
      kana_title: string;
      owner_email: string;
      owner_id: string;
      owner_name: string;
      remarks?: string | null;
      sub_owner_email?: string | null;
      sub_owner_id?: string | null;
      sub_owner_name?: string | null;
      title: string;
      /** Format: date-time */
      updated_at: string;
    };
    ProjectApplicationPeriod: {
      /** Format: date-time */
      end_at: string;
      /** Format: date-time */
      start_at: string;
    };
    /** @enum {string} */
    ProjectAttribute: "academic" | "art" | "official" | "inside" | "outside";
    ProjectAttributes: components["schemas"]["ProjectAttribute"][];
    ProjectCategories: components["schemas"]["ProjectCategory"][];
    /** @enum {string} */
    ProjectCategory: "general" | "foods_with_kitchen" | "foods_without_kitchen" | "foods_without_cooking" | "stage_1a" | "stage_university_hall" | "stage_united";
    ProjectSummary: {
      attributes: components["schemas"]["ProjectAttributes"];
      category: components["schemas"]["ProjectCategory"];
      group_name: string;
      /** Format: uuid */
      id: string;
      /** Format: int32 */
      index: number;
      kana_group_name: string;
      kana_title: string;
      owner_email: string;
      owner_id: string;
      owner_name: string;
      title: string;
    };
    UpdateForm: {
      attachments: string[];
      attributes: components["schemas"]["ProjectAttributes"];
      categories: components["schemas"]["ProjectCategories"];
      description: string;
      /** Format: date-time */
      ends_at: string;
      items: components["schemas"]["NewFormItem"][];
      /** Format: date-time */
      starts_at: string;
      title: string;
    };
    UpdateFormAnswer: {
      items: components["schemas"]["FormAnswerItem"][];
    };
    UpdateNews: {
      attachments: string[];
      attributes: components["schemas"]["ProjectAttributes"];
      body: string;
      categories: components["schemas"]["ProjectCategories"];
      title: string;
    };
    UpdateProject: {
      attributes: components["schemas"]["ProjectAttributes"];
      category: components["schemas"]["ProjectCategory"];
      group_name: string;
      kana_group_name: string;
      kana_title: string;
      remarks?: string | null;
      title: string;
    };
    UpdateUser: {
      email: string;
      kana_name: string;
      name: string;
      phone_number: string;
      role: components["schemas"]["UserRole"];
    };
    User: {
      /** Format: date-time */
      created_at: string;
      email: string;
      id: string;
      kana_name: string;
      name: string;
      /** Format: uuid */
      owned_project_id?: string | null;
      owned_project_title?: string | null;
      phone_number: string;
      role: components["schemas"]["UserRole"];
      /** Format: date-time */
      updated_at: string;
    };
    /** @enum {string} */
    UserRole: "administrator" | "committee_operator" | "committee_editor" | "committee_drafter" | "committee_viewer" | "general";
    UserSummary: {
      email: string;
      id: string;
      name: string;
      role: components["schemas"]["UserRole"];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** ファイル一覧の取得 */
  getFiles: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["FileInfo"][];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** ファイルの作成 */
  postFiles: {
    parameters: {
      query: {
        visibility: "private" | "public";
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": {
          /** Format: binary */
          file: string;
        };
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["CreatedFile"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** ファイル一覧のエクスポート */
  getFilesExport: {
    parameters: {
      query?: {
        project_id?: string | null;
        form_id?: string | null;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/zip": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDのファイルの取得 */
  getFileById: {
    parameters: {
      path: {
        file_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["File"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDのファイルの削除 */
  deleteFileById: {
    parameters: {
      path: {
        file_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 申請回答一覧を取得 */
  getFormAnswers: {
    parameters: {
      query?: {
        project_id?: string | null;
        form_id?: string | null;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["FormAnswerSummary"][];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 申請回答を作成 */
  postFormAnswer: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateFormAnswer"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["CreatedFormAnswer"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 申請回答一覧のエクスポート */
  getFormAnswersExport: {
    parameters: {
      query?: {
        form_id?: string | null;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/csv": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDの申請回答を取得 */
  getFormAnswerById: {
    parameters: {
      path: {
        form_answer_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["FormAnswer"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDの申請回答を更新 */
  putFormAnswerById: {
    parameters: {
      path: {
        form_answer_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateFormAnswer"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 申請一覧の取得 */
  getForms: {
    parameters: {
      query?: {
        project_id?: string | null;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["FormSummary"][];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 申請の作成 */
  postForm: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateForm"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["CreatedForm"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDの申請を取得 */
  getFormById: {
    parameters: {
      path: {
        form_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Form"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDの申請を更新 */
  putFormById: {
    parameters: {
      path: {
        form_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateForm"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDの申請を削除 */
  deleteFormById: {
    parameters: {
      path: {
        form_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** サーバーの状態を確認する */
  getHealth: {
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /** 招待一覧の取得 */
  getInvitations: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Invitation"][];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 招待の作成 */
  postInvitation: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateInvitation"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["CreatedInvitation"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDの招待の取得 */
  getInvitationById: {
    parameters: {
      path: {
        invitation_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Invitation"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDの招待の受諾 */
  postInvitationById: {
    parameters: {
      path: {
        invitation_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDの招待の削除 */
  deleteInvitationById: {
    parameters: {
      path: {
        invitation_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** お知らせ一覧の取得 */
  getNews: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["NewsSummary"][];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** お知らせの作成 */
  postNews: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateNews"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["CreatedNews"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDのお知らせの取得 */
  getNewsById: {
    parameters: {
      path: {
        news_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["News"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDのお知らせを更新 */
  putNewsById: {
    parameters: {
      path: {
        news_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateNews"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDのお知らせの削除 */
  deleteNewsById: {
    parameters: {
      path: {
        news_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 企画募集期間を取得する */
  getProjectApplicationPeriod: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ProjectApplicationPeriod"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 企画一覧の取得 */
  getProjects: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ProjectSummary"][];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 企画の作成 */
  postProject: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateProject"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["CreatedProject"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 企画一覧のエクスポート */
  getProjectsExport: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/csv": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 自分が企画責任者・副企画責任者になっている企画の取得 */
  getMyProject: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDの企画の取得 */
  getProjectById: {
    parameters: {
      path: {
        project_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDの企画を更新 */
  putProjectById: {
    parameters: {
      path: {
        project_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateProject"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDの企画の削除 */
  deleteProjectById: {
    parameters: {
      path: {
        project_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** ユーザー一覧の取得 */
  getUsers: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserSummary"][];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** ユーザーの作成 */
  postUser: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateUser"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["CreatedUser"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** ユーザー一覧のエクスポート */
  getUsersExport: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/csv": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 自分のユーザーの取得 */
  getMyUser: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDのユーザーの取得 */
  getUserById: {
    parameters: {
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDのユーザーの更新 */
  putUserById: {
    parameters: {
      path: {
        user_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateUser"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /** 特定のIDのユーザーの削除 */
  deleteUserById: {
    parameters: {
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
}
